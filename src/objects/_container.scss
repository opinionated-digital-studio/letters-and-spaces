@use '../settings';
@use '../tools' as *;

// Adapted from https://github.com/alphagov/govuk-frontend/blob/main/src/govuk/objects/_width-container.scss
//
// The MIT License (MIT)

// Copyright (C) 2017 Crown Copyright (Government Digital Service)

// Permission is hereby granted, free of charge, to any person obtaining a copy of
// this software and associated documentation files (the "Software"), to deal in
// the Software without restriction, including without limitation the rights to
// use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies
// of the Software, and to permit persons to whom the Software is furnished to do
// so, subject to the following conditions:

// The above copyright notice and this permission notice shall be included in all
// copies or substantial portions of the Software.

@mixin container($width: settings.$max-width) {
  // On mobile, add half width gutters
  margin-left: settings.$gutter-half;
  margin-right: settings.$gutter-half;

  // By default, limit the width of the container to the page width
  max-width: $width;

  @supports (margin: unquote('max(calc(0px))')) {
    $gutter-safe-area-left: calc(#{settings.$gutter-half} + env(safe-area-inset-left));
    $gutter-safe-area-right: calc(#{settings.$gutter-half} + env(safe-area-inset-right));

    // Respect 'display cutout' safe area (avoids notches and rounded corners)
    margin-left: unquote('max(#{settings.$gutter-half}, #{$gutter-safe-area-left})');
    margin-right: unquote('max(#{settings.$gutter-half}, #{$gutter-safe-area-right})');
  }

  // On tablet, add full width gutters
  @include media-query($from: tablet) {
    margin-left: settings.$gutter;
    margin-right: settings.$gutter;

    @supports (margin: unquote('max(calc(0px))')) {
      $gutter-safe-area-left: calc(#{settings.$gutter-half} + env(safe-area-inset-left));
      $gutter-safe-area-right: calc(#{settings.$gutter-half} + env(safe-area-inset-right));

      // Use max() to pick largest margin, default or with safe area
      // Escaped due to Sass max() vs. CSS native max()
      margin-left: unquote('max(#{settings.$gutter}, #{$gutter-safe-area-left})');
      margin-right: unquote('max(#{settings.$gutter}, #{$gutter-safe-area-right})');
    }
  }

  // As soon as the viewport is greater than the width of the page plus the
  // gutters, just centre the content instead of adding gutters.
  @include media-query(
    $and: '(min-width: #{($width + settings.$gutter * 2)})'
  ) {
    margin-left: auto;
    margin-right: auto;

    // Since a safe area may have previously been set above,
    // we need to duplicate this margin that centers the page.
    @supports (margin: unquote('max(calc(0px))')) {
      margin-left: auto;
      margin-right: auto;
    }
  }
}

.container {
  @include container;
}
